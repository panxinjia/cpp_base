#include <iostream>

using namespace std;

/**
 * 面向过程: 提出问题, 分析问题, 解决问题:  大问题 -> 小问题
 *  优点: 用到的语法少, 问题清晰, 是一个逐步分解问题的演绎过程
 *  缺点: 数据和操作是分开的, 完全通过函数的副作用编程, 
 *       封装性(没有), 扩展性(函数级别), 代码与逻辑不是一致的, 数据有变化时, 类型相关的地方都需要修改.
 * 面向对象: 是面向过程的继承和发展, 管理数据和代码的一种思想, 问题域的相关实体的抽象
 *   属性, 行为 <=> 数据, 函数
 * 
 * 更好完成一个问题的三个重点:
 *  1. 编程思想, 使用什么编程思想解决问题
 *  2. 对应语言的语法, 特性运用
 *  3. 计算机本身相关问题, 系统, 内存, 特性
 */
int main(int argc, char const *argv[])
{

    return 0;
}